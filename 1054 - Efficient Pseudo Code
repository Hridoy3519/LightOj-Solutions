#include<bits/stdc++.h>
using namespace std;
#define pi acos(-1.0)
//cout << fixed << setprecision(8) << a << endl;
#define Fast_Input ios_base :: sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL);
#define pb push_back
#define mem(a, b)     memset(a, b, sizeof(a))
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
typedef long long ll;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update>ordered_set;
/*sort(v.begin(), v.end(),
     [](const pair<int, int>& x, const pair<int, int>& y)
{
    if (x.first != y.first)
        return x.first < y.first;
    return x.second < y.second;
});
*/
int const fx[]= {+1,+0,-1,+1};
int const fy[]= {-1,+1,+0,+0};
const int inf = numeric_limits<int>::max();
const int mx=3e5+5;
const ll mod=1000000007;
ll pow(ll x,ll n,ll modulo)
{
    ll res=1;
    while(n)
    {
        if(n%2)
        {
            res=(x*res)%modulo;
            n--;
        }
        x=(x*x)%modulo;
        n/=2;
    }
    return res;
}
int main()
{
    int t,ca=0;scanf("%d",&t);
    while(t--)
    {
        ll n,m,i,sum=1;
        scanf("%lld%lld",&n,&m);
        map<int,int>mp;
        for(i=2;i*i<=n;i++)
        {
            if(n%i==0)
            {
                while(n%i==0)mp[i]++,n/=i;
            }
        }
        if(n>1)mp[n]++;
        ll x,y,a,b,now;
        vector<ll>v;
        for(auto z:mp)
        {
           x=z.first;
           y=(z.second*m);
           a=pow(x,y+1,mod)-1;
           b=pow(x-1,mod-2,mod);
           if(a==-1)now=1;
           else
           {
               now=(a*b)%mod;
           }
           
           sum=(sum*now)%mod;
        }
        printf("Case %d: %lld\n",++ca,sum);
    }
}
